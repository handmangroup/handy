<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Link;
use Drupal\Component\Utility\Xss;
use Drupal\node\Entity\Node;
use Drupal\Component\Render\MarkupInterface;


function handy_preprocess_html(&$variables)
{
  if (!isset($variables['attributes']['class'])) {
    $variables['attributes']['class'] = [];
  }

  $current_path = \Drupal::service('path.current')->getPath();
  $internal = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  $variables['attributes']['class'][] = str_replace("/", " ", $internal);

  // Color settings
  if (theme_get_setting('bootstrap_barrio_enable_color')) {
    $variables['#attached']['library'][] = 'handy/colors';

    // CSS variables
    $gray200 = '#e9ecef';
    $gray800 = '#343a40';
    $white = '#fff';
    $pc = theme_get_setting('bootstrap_barrio_base_primary_color') ?? '#2F3C7E';
    $pcrgb = _hex2rgb( $pc );
    $pcd = _color_luminance($pc, -0.15);
    $pcl = _color_luminance($pc, 0.95);
    $bc = '#000';
    $pct = _getContrastColor($pc, $white, $bc);
    $pctrgb = _hex2rgb( $pct );
    $sc = theme_get_setting('bootstrap_barrio_base_secondary_color') ?? '#FBEAEB';
    $scrgb = _hex2rgb( $sc );
    $scd = _color_luminance($sc, -0.15);
    $scl = _color_luminance($sc, 0.95);
    $sct = _getContrastColor($sc, $white, $bc);
    $tc =  theme_get_setting('bootstrap_barrio_base_tertiary_color') ?? '#000';
    $color = theme_get_setting('bootstrap_barrio_body_color') ?? '#000';
    $bg = theme_get_setting('bootstrap_barrio_body_bg_color') ?? 'white';
    $h1 = theme_get_setting('bootstrap_barrio_h1_color') ?? $color;
    $h1 = ($h1 == 'primary') ? $pc : $h1;
    $h1 = ($h1 == 'secondary') ? $sc : $h1;
    $h1 = ($h1 == 'tertiary') ? $tc : $h1;
    $h2 = theme_get_setting('bootstrap_barrio_h2_color') ?? $color;
    $h2 = ($h2 == 'primary') ? $pc : $h2;
    $h2 = ($h2 == 'secondary') ? $sc : $h2;
    $h2 = ($h2 == 'tertiary') ? $tc : $h2;
    $h3 = theme_get_setting('bootstrap_barrio_h3_color') ?? 'base';
    $h3 = ($h3 == 'primary') ? $pc : $h3;
    $h3 = ($h3 == 'secondary') ? $sc : $h3;
    $h3 = ($h3 == 'tertiary') ? $tc : $h3;
    $styles = [
      "--bs-primary:$pc;",
      "--bb-primary-dark:$pcd;",
      "--bb-primary-light:$pct;",
      "--bs-primary-rgb:$pcrgb;",
      "--bs-primary-bg-subtle:$pcl;",
      "--bb-primary-text:$pct;",
      "--bs-primary-text:$pct;",
      "--bs-secondary:$sc;",
      "--bb-secondary-dark:$scd;",
      "--bb-secondary-text:$sct;",
      "--bs-secondary-text:$sct;",
      "--bs-secondary-rgb:$scrgb;",
      "--bs-secondary-bg-subtle:$scl;",
      "--bs-btn-hover-color:$pct;",
      "--bs-link-hover-color-rgb:$pctrgb;",
      "--bs-link-hover-color:$pct;",
      "--bs-body-color:$color;",
      "--bs-body-bg:$bg;",
      "--bb-h1-color:$h1;",
      "--bb-h2-color:$h2;",
      "--bb-h3-color:$h3;",
      "--bs-tertiary:$tc;",
      "--bs-secondary-text:$tc;"
    ];
    $variables['html_attributes']->setAttribute('style', implode('', $styles));
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */

function handy_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Enable 'page_fullwidth' for nodes
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if(!is_object($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }
    $content_type = $node->bundle();
    if ($content_type == 'landing_page') {
      $suggestions[] = 'page__fullwidth';
    }
  }

  // Enable 'page_fullwidth' for user profile
  if ($node = \Drupal::routeMatch()->getRouteName() == 'entity.user.canonical') {
    $suggestions[] = 'page__fullwidth';
  }

  // Enable 'page_fullwidth' for views
  $request = \Drupal::routeMatch()->getRouteObject()->getDefault('view_id');
  if (!empty($request) && $request == 'portfolio_wide' ) {
    $suggestions[] = 'page__fullwidth';
  }
}

/**
 * Add color, menu and theme settings
 */
function handy_preprocess_page(&$variables)
{
  $menu = theme_get_setting('theme_menu');
  $variables['mainmenu_class'] = '';
  if($menu == 'menu_light') {
    $variables['mainmenu_class'] = 'navbar-light navbar-bg-light';
  }
  elseif($menu == 'menu_dark') {
    $variables['mainmenu_class'] = 'navbar-dark navbar-bg-dark text-bg-dark';
  }
  elseif($menu == 'bg-primary') {
    $variables['mainmenu_class'] = 'bg-primary text-bg-primary';
  }
  elseif($menu == 'bg-secondary') {
    $variables['mainmenu_class'] = 'bg-secondary text-bg-primary';
  }
  elseif($menu == 'bg-gray') {
    $variables['mainmenu_class'] = 'bg-gray';
  }
  else {
    $variables['mainmenu_class'] = 'navbar-light navbar-bg-light';
  }




  //Theme Page Title
  $variables['title_alignment'] = theme_get_setting('title_alignment');

  //Theme Menu Alignment
  $variables['menu_alignment'] = theme_get_setting('theme_menu_alignment');

  // Theme footer
  $variables['footer_classes'] = theme_get_setting('footer_classes');

  // Node menu: get option "transparent" and "absolute"
  $variables['mainmenu_transparent'] = '';
  $variables['mainmenu_absolute'] = '';
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if ($node->hasField('field_mainmenu_transparent')) {
      $mainmenu_transparent = $node->get('field_mainmenu_transparent')->getValue();
      if($mainmenu_transparent[0]['value']) {
        $variables['mainmenu_transparent'] = 'transparent';
      }
    }
    if ($node->hasField('field_mainmenu_absolute')) {
      $mainmenu_absolute = $node->get('field_mainmenu_absolute')->getValue();
      if($mainmenu_absolute[0]['value']) {
        $variables['mainmenu_absolute'] = 'navbar-absolute';
      }
    }
    if ($node->hasField('field_extra_class')) {
      $extra_class = $node->get('field_extra_class')->getValue();
      if($extra_class[0]['value']) {
        $variables['extra_class'] = $extra_class[0]['value'];
      }
    }
  }

  //Fonts
  $fonts = theme_get_setting('bootstrap_barrio_google_fonts');
  if ($fonts) {
    $variables['#attached']['library'][] = 'handy/' . $fonts;
  }

  // Check node's view mode, if it is full_content_title_image, set mainmenu to be transparent
  if (!empty($variables['node']) && $variables['node']->current_view_mode == 'full_content_title_image') {
    $variables['mainmenu_transparent'] = 'transparent';
  }
}

/**
 * Process page title
 */
function handy_preprocess_page_title(&$variables)
{
  $variables['title_size'] = theme_get_setting('title_size');
  $variables['title_weight'] = theme_get_setting('title_weight');
}
/**
 * Process menu
 */

function handy_preprocess_menu(&$variables)
{
  $variables['link_size'] = theme_get_setting('link_size');


//Theme Menu Links color
  $variables['link_color'] = theme_get_setting('link_color');
  $variables['dropdown_color'] = theme_get_setting('dropdown_color');
  $variables['dropdown_link_color'] = theme_get_setting('dropdown_link_color');

  if (isset($variables['items']) && is_array($variables['items'])) {
    foreach ($variables['items'] as &$item) {
      $item['attributes']['class'] = theme_get_setting('dropdown_link_color');
    }
  }
}


/**
 * Process block content
 */
function handy_theme_suggestions_block_alter(&$suggestions, $variables) {
  $content = $variables['elements']['content'];
  if (isset($content['#block_content']) && $content['#block_content'] instanceof \Drupal\block_content\BlockContentInterface) {
    $suggestions[] = 'block__' . $content['#block_content']->bundle();
  }
}

/**
 * Implements hook_preprocess_node() to add node view mode to page's variables
 */
function handy_preprocess_node(array &$variables, $hook)
{
  if (isset($variables['view_mode'])) {
    $node = $variables['node'];
    $node->current_view_mode = $variables['view_mode'];
    $variables['current_view_mode'] = $node->current_view_mode;
  }
  // Hide label on all nodes
  if (theme_get_setting('bootstrap_barrio_hide_node_label') != NULL) {
    unset($variables['label']);
  }
}

/**
 * Add placeholder to search form
 */
function handy_form_search_block_form_alter(&$form, FormStateInterface $form_state) {
  $form['keys']['#attributes']['placeholder'] = t('Type keyword and hit enter');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function handy_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['layout_builder']) || isset($form['layout_builder__layout'])) {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    if ($theme == 'seven' || $theme == 'claro') {
      $form['#attached']['library'][] = 'handy/bootstrap_cdn';
    }
  }
}
